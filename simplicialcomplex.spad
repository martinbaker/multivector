)if false
\documentclass{article}
\usepackage{axiom}
\usepackage{url}
\begin{document}
\title{Simplicial Complex Structures}
\author{Martin J Baker}
\maketitle
\begin{abstract}
simplicialcomplex

I would like to code topological spaces in a finite way, simplicial
complexes allow us to do this in a systematic way.

Simplicial Complexes may not be the most efficient tool, for cutting
edge topology, in terms the most economical representation. However,
for computer-science and combinatorial uses, simplicial complexes may
be the best tool because of their combinatorial simplicity. [1]

I have put a fuller explanation of this code here:
\url{http://www.euclideanspace.com/prog/scratchpad/mycode/}
\end{abstract}
\section{Related Code}

\section{Introduction}

)endif

)abbrev domain SIMPC SimplicialComplex
++ Author: Martin Baker
++ Description: 
++
++   for more documentation see:
++   http://www.euclideanspace.com/prog/scratchpad/mycode/
++ Date Created: Dec 2015
++ Date Last Updated: Dec 2015
++ Basic Operations:
++ Related packages:
++ Related categories:
++ Related Domains:
++ Also See:
++ AMS Classifications:
++ Keywords: 
++ Examples: 
++ References:

SimplicialComplex(k:PositiveInteger,F:Field) : Exports == Impl where
  PI ==> PositiveInteger
  NNI==> NonNegativeInteger
  Vertex1 ==> PrimitiveArray(F)
  x<<y ==> hconcat(x::OutputForm,y::OutputForm)

  Exports ==> SetCategory() with
    simplicialComplex: (v:List(Vertex1),f:List(PrimitiveArray(NNI))) -> %
     ++ constructor where the vertex set and faces are supplied

  Impl ==> add

   -- Representation holds whole Simplicial Complex. This consists of
   -- a vertex set, here represented as a vertex list so that we can
   -- index it.
   -- Also a list of hyper-faces (that is n-dimensional faces). each
   -- face is an array of vertex indexes.
   -- So each face is a subset of the vertex set.
   Rep := Record(verts:List(Vertex1),faces:List(PrimitiveArray(NNI)))

   -- constructor where the vertex set and faces are supplied
   simplicialComplex(v:List(Vertex1),f:List(PrimitiveArray(NNI))):% ==
     [v,f]


--Copyright (c) 2015, Martin J Baker.
--All rights reserved.
--
--Redistribution and use in source and binary forms, with or without
--modification, are permitted provided that the following conditions are
--met:
--
--    - Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    - Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in
--      the documentation and/or other materials provided with the
--      distribution.
--
--    - Neither the name of Martin J Baker. nor the
--      names of its contributors may be used to endorse or promote products
--      derived from this software without specific prior written permission.
--
--THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
--IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
--TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
--PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
--OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
--EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
--PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

)if false
\eject
\begin{thebibliography}{99}
For more details see:
[1] Mathematics++ Kantor,Matousek,Samal 2015  ISBN 978-1-4704-2261-5
      Chapter 6 - Topology
[2] Graphs, Surfaces and Homology, Peter Giblin 2010 ISBN 987-0-521-15405-5
     
[3] I have put a fuller explanation of this code here:
\url{http://http://www.euclideanspace.com/prog/scratchpad/mycode/}
\end{thebibliography}
\end{document}
)endif

